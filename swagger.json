{
  "swagger": "2.0",
  "info": {
    "title": "API",
    "version": "version not set"
  },
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "JWT": []
    }
  ],
  "responses": {
    "UnauthorizedError": {
      "description": "Access token is missing or invalid"
    }
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "example@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": ["email", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User registered successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User already exists"
                }
              }
            }
          }
        },
        "tags": ["Authentication"]
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login user",
        "parameters": [
          {
            "in": "body",
            "name": "credentials",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "example@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": ["email", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User authenticated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmNTBmYzI4ODRjMjRjMDAxNzRlYzI4ZiIsImlhdCI6MTYyMjI4NDYyNiwiZXhwIjoxNjIyMjg4MjI2fQ.GiRfNvoBKlKWMx67mHRE0DfA_v1SnjV0mYpB8uLDrZ8"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid email or password"
                }
              }
            }
          }
        },
        "tags": ["Authentication"]
      }
    },
    "/api/books": {
      "get": {
        "summary": "GET /api/books",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": ["Generic"]
      }
    },
    "/api/books/addbook": {
      "post": {
        "summary": "GET /api/books/:id",
        "parameters": [
          {
            "in": "body",
            "name": "credentials",
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "author": {
                "type": "string"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": ["Generic"]
      }
    },
    "/api/books/{id}": {
      "get": {
        "summary": "GET /api/books/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["Generic"]
      },
      "put": {
        "summary": "PUT /api/books/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "author": {
                  "type": "string"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["Generic"]
      },
      "delete": {
        "summary": "DELETE /api/books/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Book is deleted"
          }
        },
        "tags": ["Generic"]
      }
    }
  },
  "definitions": {}
}
